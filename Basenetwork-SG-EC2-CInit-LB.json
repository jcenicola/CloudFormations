{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "My Base network:VPC,Network,NAT gateway",
  "Metadata": {

  },
  "Parameters": {
    "Subnet1Cidr": {
      "Description": "Choose Cidr for Subnet1",
      "Type": "String",
      "Default": "10.0.1.1/24"
    },
    "Subnet2Cidr": {
      "Description": "Choose Cidr for Subnet2",
      "Type": "String",
      "Default": "10.0.2.1/24"
    },
    "Subnet3Cidr": {
      "Description": "Choose Cidr for Subnet1",
      "Type": "String",
      "Default": "10.0.3.1/24"
    },
    "Subnet4Cidr": {
      "Description": "Choose Cidr for Subnet2",
      "Type": "String",
      "Default": "10.0.4.1/24"
    },
    "Subnet1AZs": {
      "Description": "Choose AZ for Subnet1",
      "Type": "AWS::EC2::AvailabilityZone::Name"
    },
    "Subnet2AZs": {
      "Description": "Choose AZ for Subnet2",
      "Type": "AWS::EC2::AvailabilityZone::Name"
    },
    "Subnet3AZs": {
      "Description": "Choose AZ for Priv-Subnet1",
      "Type": "AWS::EC2::AvailabilityZone::Name"
    },
    "Subnet4AZs": {
      "Description": "Choose AZ for Priv-Subnet2",
      "Type": "AWS::EC2::AvailabilityZone::Name"
    },
    "Webserverkeyname": {
      "Description": "Web server key name",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "InstanceType": {
      "Description": "Choose Instance Type",
      "Type": "String",
      "Default": "t2.micro"
    },
    "WebserverAMI": {
      "Description": "Add AMI for web server",
      "Type": "String"
    }
  },

  "Mappings": {
    "RegionMap": {
      "us-east-1": {
        "64": "ami-0ff8a91507f77f867"
      },
      "us-east-2": {
        "64": " ami-0b59bfac6be064b78"
      }
    }

  },
  "Conditions": {

  },
  "Resources": {
    "MyVpc": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "InstanceTenancy": "default",
        "Tags": [{
          "Key": "Name",
          "Value": "MyVpc"
        }]
      }
    },
    "Subnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "MapPublicIpOnLaunch": true,
        "AvailabilityZone": {
          "Ref": "Subnet1AZs"
        },
        "VpcId": {
          "Ref": "MyVpc"
        },
        "CidrBlock": {
          "Ref": "Subnet1Cidr"
        },
        "Tags": [{
          "Key": "Name",
          "Value": "Pub-Subnet1"
        }]
      }
    },
    "Subnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "MapPublicIpOnLaunch": true,
        "AvailabilityZone": {
          "Ref": "Subnet2AZs"
        },
        "VpcId": {
          "Ref": "MyVpc"
        },
        "CidrBlock": {
          "Ref": "Subnet2Cidr"
        },
        "Tags": [{
          "Key": "Name",
          "Value": "Pub-Subnet2"
        }]
      }
    },
    "Subnet3": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "MapPublicIpOnLaunch": false,
        "AvailabilityZone": {
          "Ref": "Subnet3AZs"
        },
        "VpcId": {
          "Ref": "MyVpc"
        },
        "CidrBlock": {
          "Ref": "Subnet3Cidr"
        },
        "Tags": [{
          "Key": "Name",
          "Value": "Priv-Subnet1"
        }]
      }
    },
    "Subnet4": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "MapPublicIpOnLaunch": false,
        "AvailabilityZone": {
          "Ref": "Subnet4AZs"
        },
        "VpcId": {
          "Ref": "MyVpc"
        },
        "CidrBlock": {
          "Ref": "Subnet4Cidr"
        },
        "Tags": [{
          "Key": "Name",
          "Value": "Priv-Subnet2"
        }]
      }
    },
    "MyVPCIGW": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [{
          "Key": "Name",
          "Value": "MyVPCIGW"
        }]
      }
    },
    "EIPNATAZ1": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "NATAZ1": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "Subnet2"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            "EIPNATAZ1",
            "AllocationId"
          ]
        }
      }
    },
    "NATAZ1Route": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "NATAZ1"
        },
        "RouteTableId": {
          "Ref": "SubnetRTpriv"
        }
      }
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "MyVpc"
        },
        "InternetGatewayId": {
          "Ref": "MyVPCIGW"
        }
      }
    },
    "SubnetRTpub": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "MyVpc"
        },
        "Tags": [{
          "Key": "Name",
          "Value": "SubnetRTpub"
        }]
      }
    },
    "SubnetRTpriv": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "MyVpc"
        },
        "Tags": [{
          "Key": "Name",
          "Value": "SubnetRTpriv"
        }]
      }
    },
    "RouteIGW": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "SubnetRTpub"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "MyVPCIGW"
        }
      }
    },
    "Subnet1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "Subnet1"
        },
        "RouteTableId": {
          "Ref": "SubnetRTpub"
        }
      }
    },
    "Subnet2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "Subnet2"
        },
        "RouteTableId": {
          "Ref": "SubnetRTpub"
        }
      }
    },
    "Subnet3RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "Subnet3"
        },
        "RouteTableId": {
          "Ref": "SubnetRTpriv"
        }
      }
    },
    "Subnet4RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "Subnet4"
        },
        "RouteTableId": {
          "Ref": "SubnetRTpriv"
        }
      }
    },
    "WebServersSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": "MyServerSG",
        "GroupDescription": "SG Created for Web Servers",
        "VpcId": {
          "Ref": "MyVpc"
        },
        "SecurityGroupIngress": [{
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [{
          "Key": "Name",
          "Value": "WebServersSG"
        }]
      }
    },
    "ELBSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupName": "ELBSG",
        "GroupDescription": "SG Created for ELB",
        "VpcId": {
          "Ref": "MyVpc"
        },
        "SecurityGroupIngress": {

          "IpProtocol": "tcp",
          "FromPort": "80",
          "ToPort": "80",
          "CidrIp": "0.0.0.0/0"
        },
        "Tags": [{
          "Key": "Name",
          "Value": "ELBSG"
        }]
      }
    },
    "Webserver01": {
      "Type": "AWS::EC2::Instance",
      "Metadata": {
        "AWS::CloudFormation::Init": {
          "config": {
            "packages": {
              "yum": {
                "httpd": []
              }
            },
            "groups": {},
            "users": {},
            "sources": {},
            "files": {
              "/var/www/html/index.html": {
                "content": "<h1> This works Fine!!</h1>"
              }
            },
            "commands": {},
            "services": {
              "sysvinit": {
                "httpd": {
                  "enabled": "true",
                  "ensureRunning": "true"
                }
              }
            }
          }
        }
      },
      "Properties": {
        "KeyName": {
          "Ref": "Webserverkeyname"
        },
        "SubnetId": {
          "Ref": "Subnet1"
        },
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "64"
          ]
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "Monitoring": "false",
        "SecurityGroupIds": [{
          "Ref": "WebServersSG"
        }],
        "Tags": [{
          "Key": "Name",
          "Value": "Webserver01"
        }],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -ex \n",
                "# Install the files and packages from Metedata\n",
                "/opt/aws/bin/cfn-init -v ",
                "       --stack ",
                {
                  "Ref": "AWS::StackName"
                },
                "       --resource Webserver01 ",
                "       --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n"
              ]
            ]
          }
        }
      }
    },
    "Webserver02": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "KeyName": {
          "Ref": "Webserverkeyname"
        },
        "SubnetId": {
          "Ref": "Subnet2"
        },
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "64"
          ]
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "Monitoring": "false",
        "SecurityGroupIds": [{
          "Ref": "WebServersSG"
        }],
        "Tags": [{
          "Key": "Name",
          "Value": "Webserver02"
        }],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -ex \n",
                "# Install the files and packages from Metedata\n",
                "/opt/aws/bin/cfn-init -v ",
                "       --stack ",
                {
                  "Ref": "AWS::StackName"
                },
                "       --resource Webserver01 ",
                "       --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n"
              ]
            ]
          }
        }
      }
    },
    "Myelb": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "Listeners": [{
          "LoadBalancerPort": "80",
          "InstancePort": "80",
          "Protocol": "HTTP"
        }],
        "SecurityGroups": [{
          "Ref": "ELBSG"
        }],
        "Subnets": [{
          "Ref": "Subnet1"
        }, {
          "Ref": "Subnet2"
        }],
        "Instances": [{
          "Ref": "Webserver01"
        }, {
          "Ref": "Webserver02"
        }],
        "HealthCheck": {
          "Target": {
            "Fn::Join": ["", ["HTTP:", "80", "/"]]
          },
          "HealthyThreshold": "2",
          "UnhealthyThreshold": "2",
          "Interval": "30",
          "Timeout": "5"
        },
        "Tags": [{
          "Key": "Name",
          "Value": "Myelb"
        }]
      }
    }
  },

  "Outputs": {

  }
}